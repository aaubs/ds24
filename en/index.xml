<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Social / Business Data Science 2024</title><link>https://aaubs.github.io/ds24/en/</link><description>Recent content on Social / Business Data Science 2024</description><generator>Hugo</generator><language>en-US</language><atom:link href="https://aaubs.github.io/ds24/en/index.xml" rel="self" type="application/rss+xml"/><item><title>- Introduction to Supervised ML</title><link>https://aaubs.github.io/ds24/en/m1/04_sml/01-sml-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/04_sml/01-sml-intro/</guid><description>
This session introduces supervised machine learning (SML) and related main concepts.
Notebook(s) Introduction to Supervised Machine Learning
Assignment for SML
Intro slides Use arrows keys on keyboard to navigate. Alternatively fullscreen slides
Recommended Datacamp exercises: Basics:
Python - Intro to supervised learning Python - Decision Tree modeling Modell workflows
Python - SML Preprocessing Python - SML Feature Engineering Python - SML Model validation Recommended Readings and resources Python Data Science Handbook Chapter 5</description></item><item><title>- Introduction to Unsupervised ML</title><link>https://aaubs.github.io/ds24/en/m1/03_uml/01_intro_uml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/03_uml/01_intro_uml/</guid><description>This session will introduce the principles and applications of unsupervised machine learning (UML). Students will learn about the different types of UML problems, and they will explore some of the most popular UML algorithms, such as PCA, SVD, and NMF.
Notebook(s) Hands-on Intro to Dimensionality reduction and Clustering
Assignment for the UML
Assignment for the UML Solution
Recommended Datacamp exercises: Python Recommended Readings and resources Python Data Science Handbook Chapter 5</description></item><item><title>- Welcome Students!</title><link>https://aaubs.github.io/ds24/en/m1/01_intro_ds/01_welcome_ds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/01_intro_ds/01_welcome_ds/</guid><description>This session will introduce you to the fundamentals of data science, with a focus on Python. We will cover the Python data science stack, essential tools and platforms, software setup, semester overview, and Python 101.
Session 1: Welcome Students! This session sets the stage for your data science journey:
Python Data Science Stack: Dive into Python&amp;rsquo;s core data science libraries and frameworks. We&amp;rsquo;ve got you covered!
Ecosystem Deep Dive: Familiarize yourself with essential tools and platforms, such as Github, UCloud, Google Colab, and Jupyter.</description></item><item><title>Basics Network Analysis</title><link>https://aaubs.github.io/ds24/en/m2/01_networks/1_networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m2/01_networks/1_networks/</guid><description>This session introduces basic concepts of network theory and analysis.
Recommended Datacamp exercises: Introduction to Network Analysis in Python Notebooks Basics Network Analysis Intermediate Network Analysis Slides Use arrows keys on keyboard to navigate. Alternatively use fullscreen slides</description></item><item><title>Basics of NLP</title><link>https://aaubs.github.io/ds24/en/m2/02_nlp/1-nlp-intro-sml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m2/02_nlp/1-nlp-intro-sml/</guid><description>Medieval clergy, smartphones and dogs 2023. Roman x Stable Diffusion XL
This session introduces basic concepts of NLP. We will take a Problem-Based-Learning approach and I will introduce NLP-related concepts as we go. If you need a more theoretical intro (standalone), I&amp;rsquo;ll uploaded pre-recorded videos. We will start with a project based on
Context This assignment is based on data from this paper
Davidson, T., Warmsley, D., Macy, M., &amp;amp; Weber, I.</description></item><item><title>Intro to Traditional Deep Learning</title><link>https://aaubs.github.io/ds24/en/m3/01_intro-to-traditional-dl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3/01_intro-to-traditional-dl/</guid><description>This session provides an overview of the foundational elements of deep learning, including its historical context, key concepts, and practical applications. The course will delve into various types of neural networks, outlining their advantages and disadvantages. It will specifically focus on convolutional neural networks (CNNs), recurrent neural networks (RNNs), and long short-term memory (LSTM) networks, highlighting their unique characteristics and applicability to a range of problem-solving scenarios, including those in economics.</description></item><item><title>Introduction to Data Science (W 35)</title><link>https://aaubs.github.io/ds24/en/m1/00_basics/01_intro_datascience/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/00_basics/01_intro_datascience/</guid><description>In this session, you&amp;rsquo;ll dive into the exciting world of data science, centered around Python. We&amp;rsquo;ll explore key concepts like Python data science libraries, essential tools, data manipulation, uncovering insights from data, important statistics, data visualization, and much more. Get ready to roll up your sleeves and put your learning into action with hands-on exercises and projects. It&amp;rsquo;s a chance to sharpen your skills while having some real fun with data!</description></item><item><title>Introduction to Streamlit: Building an Employee Attrition Dashboard</title><link>https://aaubs.github.io/ds24/en/m1/02_rapid_prototyping/01_rapid_prototyping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/02_rapid_prototyping/01_rapid_prototyping/</guid><description>Corgi working on a Data Science project. 2023. Roman x Stable Diffusion XL
Streamlit has rapidly become a go-to tool for data scientists and developers wanting to turn data scripts into shareable web apps. Let&amp;rsquo;s explore its core features and benefits:
Key Features of Streamlit Simplicity: With just a few lines of Python code, you can have a running web application. No need to deal with HTML, CSS, or JavaScript unless you want to.</description></item><item><title>- Data Handling and Manipulation</title><link>https://aaubs.github.io/ds24/en/m1/01_intro_ds/02_data_handeling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/01_intro_ds/02_data_handeling/</guid><description>This session will introduce students to the foundational aspects of data handling in Python. Students will learn about the different types of data that are important in data science, and they will explore essential operations like arrange, group-by, filter, select, and join. By the end of this session, students should have a solid understanding of primary data manipulation techniques, setting the stage for more advanced subjects.
Session 2: Data Handling and Manipulation I (Lecture) In this session, we&amp;rsquo;ll explore the foundational aspects of data handling.</description></item><item><title>- Recommendation and Similarity Search</title><link>https://aaubs.github.io/ds24/en/m1/03_uml/02_recommender_simsea_uml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/03_uml/02_recommender_simsea_uml/</guid><description>
In this workshop we are going to learn about recommender systems as a type of UML. Such systems are probably the most widely used and commercialy valuable form of AI today. Specifically we will be looking into collaborative filtering and matrix factorization.
Plan for today Collaborative filtering / SVD recommender using Nomadlist Trips-data in a Notebooks Streamlit recommender-app Notebook(s) Nomadlist Trips Notebook Nomadlist Trips Notebook Solutions Recap Nomadlist Trips Notebook Recap Similarity Notebook Recap Dimensionality Reduction Class UML Exemple cosine similarity App Source code for the app Deployed recommender app Recommended Readings and resources This excellent PyData Talk by the developer of LightFM Recommended Datacamp exercises: Beginner Tutorial RecSys-Course</description></item><item><title>- SML - Further topics</title><link>https://aaubs.github.io/ds24/en/m1/04_sml/02-sml-addon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/04_sml/02-sml-addon/</guid><description>
This session introduces adittional topics of intertest in SML
Notebook(s) Introduction to Explainable ML Data engineeering &amp;amp;amp; pipelines Recommended Datacamp exercises: &amp;hellip; Recommended Readings and resources &amp;hellip;</description></item><item><title>2 Mode Networks</title><link>https://aaubs.github.io/ds24/en/m2/01_networks/2_networks_2mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m2/01_networks/2_networks_2mode/</guid><description>
This session introduces to multimodel (2+) network analysis concepts.
Recommended Datacamp exercises: Intermediate Network Analysis in Python Notebooks 2-Mode Networks</description></item><item><title>Group Assignment 1</title><link>https://aaubs.github.io/ds24/en/m3/01_group_assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3/01_group_assignment/</guid><description>Portfolio Exercise 1 Note: M3 - Group Assignment 1 Deadline: Wednesday 7th of February at 12.00 PM
Introduction In this assignment, you are required to delve into the practical aspects of Deep Learning by constructing and evaluating a neural network using PyTorch. This exercise is designed to deepen your understanding of neural network architectures, hyperparameter tuning, and the preprocessing steps necessary for effective model training and evaluation. You will have the freedom to choose a dataset from either the M1 or M2 module or select an external dataset that intrigues you.</description></item><item><title>Group Assignment 1</title><link>https://aaubs.github.io/ds24/en/m3_eco/01_group_assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3_eco/01_group_assignment/</guid><description>Portfolio Exercise 1 Note: M3 - Group Assignment 1 Deadline: Monday, 6th of November at 12:00 PM
Introduction In this assignment, you are required to delve into the practical aspects of Deep Learning by constructing and evaluating a neural network using PyTorch. This exercise is designed to deepen your understanding of neural network architectures, hyperparameter tuning, and the preprocessing steps necessary for effective model training and evaluation. You will have the freedom to choose a dataset from either the M1 or M2 module or select an external dataset that intrigues you.</description></item><item><title>NW Exercises</title><link>https://aaubs.github.io/ds24/en/m2/01_networks/3_exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m2/01_networks/3_exercises/</guid><description>Exercise 1: Manager Networks Introduction In this exercise, you will replicate a well known network analysis, with different data and some twists. Data: The data is to be found at: https://github.com/SDS-AAU/SDS-master/tree/master/00_data/network_krackhard (Hint: You need to download the raw data) Data: What do I get? Background Let the fun begin. You will analyze network datacollected from the managers of a high-tec company. This dataset, originating from the paper below, is widely used in research on organizational networks.</description></item><item><title>Streamlit Development &amp; Running Offline</title><link>https://aaubs.github.io/ds24/en/m1/02_rapid_prototyping/01.5_streamlit_offline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/02_rapid_prototyping/01.5_streamlit_offline/</guid><description>Streamlit provides an easy and rapid way to turn data scripts into interactive web apps. However, at times, developers may need to ensure that their Streamlit applications run offline. Here&amp;rsquo;s a simple guide to setting up Streamlit in an offline environment using Anaconda and Visual Studio Code (VSCode).
Setup with Anaconda Environment Follow these steps to set up Streamlit within an Anaconda environment:
Install Anaconda &amp;amp; VSCode
Download and install Anaconda.</description></item><item><title>- Exploratory Data Analysis and Essential Statistics</title><link>https://aaubs.github.io/ds24/en/m1/01_intro_ds/03_data_visualization_stat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/01_intro_ds/03_data_visualization_stat/</guid><description>This session introduces students how to use EDA and some fundemental concepts of statistical methods to uncover patterns, anomalies, and frame questions in data. Students will learn foundational measures and techniques for data interpretation, and they will have the opportunity to apply EDA and statistical methods on datasets through hands-on exercises.
Deep Dive into EDA: Uncover patterns, anomalies, and frame questions. Key Statistical Concepts: Foundational measures and techniques for data interpretation.</description></item><item><title>- Real World Data to Online Dashboard</title><link>https://aaubs.github.io/ds24/en/m1/02_rapid_prototyping/02_online_dashboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/02_rapid_prototyping/02_online_dashboard/</guid><description>This session will focus on building interactive online dashboards using real-world geospatial data, with an emphasis on GeoPandas for data manipulation and visualization. Students will learn how to use GeoPandas to read, filter, and manipulate geospatial data, create interactive map-based visualizations, and ultimately deploy their dashboards to the web.
Introduction to GeoPandas Using GeoPandas to analyze geospatial data will be our focus in these notebooks.
GeoPandas GeoPandas and Solutions GeoPandas Hands-on Project GeoPandas Hands-on Project and Solutions GeoPandas Exercises GeoPandas exercises GeoPandas exercises and solutions From Geopandas to Streamlit App 🚀 Simplified version of the analysis - with Folium Plotting App code Deployed App What to do now?</description></item><item><title>- Time Series Forecasts</title><link>https://aaubs.github.io/ds24/en/m1/04_sml/03-sml-ts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/04_sml/03-sml-ts/</guid><description>
This session introduces to time series analysis and forecasting
Notebook(s) Introduction to Timeseries Forecasting Recommended Datacamp exercises: Python - Time Series Analysis Python - SML for Time Series Data Recommended Readings and resources &amp;hellip;</description></item><item><title>Intro to Transformer Models</title><link>https://aaubs.github.io/ds24/en/m3/02_intro-tm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3/02_intro-tm/</guid><description>Literature Sutskever, I., Vinyals, O., &amp;amp;amp; Le, Q. V. (2014). Sequence to sequence learning with neural networks. Advances in neural information processing systems, 27.
Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A. N., &amp;amp;hellip; &amp;amp;amp; Polosukhin, I. (2017). Attention is all you need. Advances in neural information processing systems, 30.
The illustrated transformer
Simple transformer LM
Notebooks - Basics Transformer Models - Basics Notebooks - Applications TM Applications - SBERT TM Applications - HF Simple transformer LM SBERT for Patent Search using PatentSBERTa in PyTorch Notebooks - FineTuning TM FineTuning - SimpleTransformers TM FineTuning - SBERT TM FineTuning - HF SetFit Hatespeech vs bert and distilroberta Seq2Seq - Neural Machine Translation Slides - Attention Mechanism Slides - SBERT Classification with various vectorization approaches TF-IDF and W2V Multi-Class Text Classification BERT Multi-Class Text Classification Implementing Multi-Class Text Classification LSTMs using PyTorch Resources OG SBERT-Paper Reimers, N.</description></item><item><title>Intro to Transformer Models</title><link>https://aaubs.github.io/ds24/en/m3_eco/02_intro-tm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3_eco/02_intro-tm/</guid><description>Literature Sutskever, I., Vinyals, O., &amp;amp;amp; Le, Q. V. (2014). Sequence to sequence learning with neural networks. Advances in neural information processing systems, 27.
Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A. N., &amp;amp;hellip; &amp;amp;amp; Polosukhin, I. (2017). Attention is all you need. Advances in neural information processing systems, 30.
The illustrated transformer
Simple transformer LM
Notebooks - Basics Transformer Models - Basics Notebooks - Applications TM Applications - SBERT TM Applications - HF Simple transformer LM SBERT for Patent Search using PatentSBERTa in PyTorch Notebooks - FineTuning TM FineTuning - SimpleTransformers TM FineTuning - SBERT TM FineTuning - HF SetFit Hatespeech vs bert and distilroberta Seq2Seq - Neural Machine Translation Slides - Attention Mechanism Slides - SBERT Classification with various vectorization approaches TF-IDF and W2V Multi-Class Text Classification BERT Multi-Class Text Classification Implementing Multi-Class Text Classification LSTMs using PyTorch Resources OG SBERT-Paper Reimers, N.</description></item><item><title>Modules</title><link>https://aaubs.github.io/ds24/en/info/02_modules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/info/02_modules/</guid><description>For Business Data Science Students M1: Data Handling, Exploration &amp;amp; Applied Machine Learning 10 ECTS
This module will prove a condensed introduction to the “Data Science Pipeline”, introducing students to methods, techniques, and workflows in applied data analytics and machine learning, including data acquisition, preparation, analysis, visualization, and communication.
M2: Network Analysis and Natural Language Processing 5 ECTS
Focuses on analyzing a variety of unstructured data sources. Particularly, students will learn how to explore, analyze, and visualize natural language (text) as well as relational (network) data.</description></item><item><title>NLP Applications Chatbot</title><link>https://aaubs.github.io/ds24/en/m2/02_nlp/3-nlp-advanced/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m2/02_nlp/3-nlp-advanced/</guid><description>Roman x Stable Diffusion
Chatbots are one of the most wide spread NLP applications. In this tutorial we will build a simple retrieval chatbot that can be used for example as an alternative for FAQ applications in companies.
The approach is following:
Train a model on variants of a question. Take input and predict the type of question asked - this is called &amp;ldquo;intent&amp;rdquo; Reply with a pre-defined response corresponding to the question asked.</description></item><item><title>- Introduction to Clustering: K-means and Hierarchical Approaches</title><link>https://aaubs.github.io/ds24/en/m1/03_uml/04_intro_kmeans/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/03_uml/04_intro_kmeans/</guid><description>This session will introduce the principles and applications of clustering. Students will learn about the different types of clustering problems, and they will explore some of the most popular clustering algorithms, such as K-means and hierarchical clustering.
Notebook(s) Hands-on Intro Clustering Hands-on Intro Clustering Solutions App NBA Player Injury Replacement Recommender NBA Player Injury Replacement Recommender Streamlit Recommended Datacamp exercises: Python Recommended Readings and resources Python Data Science Handbook Chapter 5 What Is Machine Learning?</description></item><item><title>Group assignment 2</title><link>https://aaubs.github.io/ds24/en/m3/02_group_assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3/02_group_assignment/</guid><description>Portfolio Exercise 2: Transformer Models Note: M3 - Group Assignment 2 Deadline: Wednesday, February 14th at 10:00 AM
Introduction This exercise is designed to deepen your understanding and skills in modern deep learning techniques. We have two main tasks for you. The first is focused on using SBERT for semantic search, and the second involves hands-on exercises with gradient descent and the attention mechanism.
Part 1: SBERT and Semantic Search Task Description Create something innovative using SBERT and semantic search, or even more!</description></item><item><title>Group assignment 2</title><link>https://aaubs.github.io/ds24/en/m3_eco/02_group_assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3_eco/02_group_assignment/</guid><description>Portfolio Exercise 2: Transformer Models Note: M3 - Group Assignment 2 Deadline: Wednesday, November 15th at 10:00 AM
Introduction This exercise is designed to deepen your understanding and skills in modern deep learning techniques. We have two main tasks for you. The first is focused on using SBERT for semantic search, and the second involves hands-on exercises with gradient descent and the attention mechanism.
Part 1: SBERT and Semantic Search Task Description Create something innovative using SBERT and semantic search, or even more!</description></item><item><title>Group assignment 3</title><link>https://aaubs.github.io/ds24/en/m3/03_intro-to-transformer-models/4_group_assignment-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3/03_intro-to-transformer-models/4_group_assignment-3/</guid><description>Portfolio Exercise 3: Introduction Task Create something cool 🚀 using SBERT and semantic search or perhaps more?! That&amp;rsquo;s a bit of a vague description but there are many options.
You are welcome to use images and CLIP You can also use SetFit for supervised tasks with SBERT models. Here are some projects for inspiration:
GIF search engine Youtube search some more ideas:
get some podcast transcripts for a specific topic (or create transcripts with Whisper - search for OpenAI Whisper Colab) Finetune an SBERT model using domain adaptation Embed and build a search engine Build a Gradio app Feel free to choose any of these ideas or come up with your own.</description></item><item><title>Group assignment 3</title><link>https://aaubs.github.io/ds24/en/m3_eco/03_intro-to-transformer-models/4_group_assignment-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3_eco/03_intro-to-transformer-models/4_group_assignment-3/</guid><description>Portfolio Exercise 3: Introduction Task Create something cool 🚀 using SBERT and semantic search or perhaps more?! That&amp;rsquo;s a bit of a vague description but there are many options.
You are welcome to use images and CLIP You can also use SetFit for supervised tasks with SBERT models. Here are some projects for inspiration:
GIF search engine Youtube search some more ideas:
get some podcast transcripts for a specific topic (or create transcripts with Whisper - search for OpenAI Whisper Colab) Finetune an SBERT model using domain adaptation Embed and build a search engine Build a Gradio app Feel free to choose any of these ideas or come up with your own.</description></item><item><title>Group assignment 3</title><link>https://aaubs.github.io/ds24/en/m4/03_intro-to-transformer-models/4_group_assignment-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m4/03_intro-to-transformer-models/4_group_assignment-3/</guid><description>Portfolio Exercise 3: Introduction Task Create something cool 🚀 using SBERT and semantic search or perhaps more?! That&amp;rsquo;s a bit of a vague description but there are many options.
You are welcome to use images and CLIP You can also use SetFit for supervised tasks with SBERT models. Here are some projects for inspiration:
GIF search engine Youtube search some more ideas:
get some podcast transcripts for a specific topic (or create transcripts with Whisper - search for OpenAI Whisper Colab) Finetune an SBERT model using domain adaptation Embed and build a search engine Build a Gradio app Feel free to choose any of these ideas or come up with your own.</description></item><item><title>Literature &amp; Resources</title><link>https://aaubs.github.io/ds24/en/info/04_litetrature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/info/04_litetrature/</guid><description>While this course does not come with a list of mandatory readings, we will often refer to some central resources in R and python, which for the most part can always be accessed in a free and updated online version. We generally recommend you to use these amazing resources for problem-solving and further self-study on the topic.
Main Literature These pieces of work can be seen as main references for data science using Python.</description></item><item><title>NW Cases</title><link>https://aaubs.github.io/ds24/en/m2/01_networks/4-tutorials-elites-eu-ai-companies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m2/01_networks/4-tutorials-elites-eu-ai-companies/</guid><description>Case 1: Danish Power Elites Many people dream of being one of them, but only few make it all the way to the top. According to two CBS researchers, it takes more than just hard work to get to the top of the Danish hierarchy of power. read more
In this project we are going to construct and explore a network of Danish power elites derived from boards of various organisations in th country.</description></item><item><title>Semester Schedule</title><link>https://aaubs.github.io/ds24/en/info/03_schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/info/03_schedule/</guid><description>This will be shortly updated with additional key dates and topics for the semester. For now, please follow CalMoodle.
M1: Week 35-41 Topics W 35: Introduction &amp;amp; landing W 36: Data Manipulation, Exploratory Data Analysis (EDA) W 37: Exploratory Data Analysis (EDA) / Dashboard development / Hackathon W 38: Unsupervised Machine Learning (UML), Math for ML W 39: Supervised Machine Learning (SML) W 40: Group Assignment W 41: Exam</description></item><item><title>- Data Visualization in Data Science</title><link>https://aaubs.github.io/ds24/en/m1/01_intro_ds/05_data_visualization_ds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/01_intro_ds/05_data_visualization_ds/</guid><description>This session will teach you the fundamentals of data visualization in data science. You will learn the importance of effective data visualization, the principles that drive meaningful visuals, and how to use two popular Python libraries for data visualization: Seaborn and Altair.
Foundations of Visualization: Understand the importance of effective data visualization in Data Science and the principles that drive meaningful visuals. Seaborn Mastery: Explore Seaborn, a Python library for intuitive statistical graphics.</description></item><item><title>Intro to GPT Models</title><link>https://aaubs.github.io/ds24/en/m3/03_intro-gpt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3/03_intro-gpt/</guid><description>GPT models (Decoders) play a crucial role in generating subsequent words in tasks like text translation or story generation, providing outputs along with their probabilities. They utilize attention mechanisms twice during training: initially, Masked Multi-Head Attention, where only the beginning of a target sentence is revealed, and later, Multi-Head Attention, similar to encoders. In traditional transformer models, decoders interact with encoders by using the encoder&amp;rsquo;s outputs to assist in tasks like sentence translation.</description></item><item><title>Intro to GPT Models</title><link>https://aaubs.github.io/ds24/en/m3_eco/03_intro-gpt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3_eco/03_intro-gpt/</guid><description>GPT models (Decoders) play a crucial role in generating subsequent words in tasks like text translation or story generation, providing outputs along with their probabilities. They utilize attention mechanisms twice during training: initially, Masked Multi-Head Attention, where only the beginning of a target sentence is revealed, and later, Multi-Head Attention, similar to encoders. In traditional transformer models, decoders interact with encoders by using the encoder&amp;rsquo;s outputs to assist in tasks like sentence translation.</description></item><item><title>Semester Project Requirements</title><link>https://aaubs.github.io/ds24/en/info/05_requirements_project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/info/05_requirements_project/</guid><description>Format Functional and self-contained notebook Happy to see GitHub repos (which you can use as your portfolio in the job market) Project report (30-ish pages - max. 45) Some study relation (but that is debatable and not necessarily required) Report is a (semi/non) technical documentation. Think about a corporate censor that you try to inform Content Problem formulation with some practical and theoretical motivation (no huge literature discussion) Methodology (not a critical realist vs positivist discussion but some ideas about what can be concluded potentially) Data sourcing and pre-processing strategy Overall architecture of the model(s) Modelling (incl.</description></item><item><title>Group Assignment 3</title><link>https://aaubs.github.io/ds24/en/m3/03_group_assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3/03_group_assignment/</guid><description>Portfolio Exercise 3: GPT Models Note: M3 - Group Assignment 3 Deadline: Wednesday 28th of February at 12:00 PM
Introduction This assignment focuses on leveraging retrieval-augmented generation (RAG) techniques, particularly in the context of extracting and synthesizing information from various documents (or a document). You&amp;rsquo;ll be using Langchain to implement these concepts and create a system that not only generates responses but also retrieves relevant information from a database.
Objective Task Description Your task is to create a system that uses RAG for extracting information from a set of documents or a document which can be either a scientific paper or report.</description></item><item><title>Group Assignment 3</title><link>https://aaubs.github.io/ds24/en/m3_eco/03_group_assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3_eco/03_group_assignment/</guid><description>Portfolio Exercise 3: GPT Models Note: M3 - Group Assignment 3 Deadline: Wednesday, November 22nd at 10:00 AM
Introduction This assignment focuses on leveraging retrieval-augmented generation (RAG) techniques, particularly in the context of extracting and synthesizing information from various documents (or a document). You&amp;rsquo;ll be using Langchain to implement these concepts and create a system that not only generates responses but also retrieves relevant information from a database.
Objective Task Description Your task is to create a system that uses RAG for extracting information from a set of documents or a document which can be either a scientific paper or report.</description></item><item><title>Intro to Graph Neural Networks</title><link>https://aaubs.github.io/ds24/en/m3_eco/04_intro-gnn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3_eco/04_intro-gnn/</guid><description>Graph neural networks (GNNs) are a powerful new class of machine learning algorithms that are specifically designed to handle graph-structured data. Unlike traditional neural networks, which are designed to process data in the form of vectors or matrices, GNNs can operate directly on graphs, where nodes represent entities and edges represent relationships between entities. This makes them well-suited for a wide range of tasks that involve understanding the structure of complex systems, such as social networks, knowledge graphs, and molecular structures.</description></item><item><title>Group Assignment 4</title><link>https://aaubs.github.io/ds24/en/m3_eco/04_group_assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3_eco/04_group_assignment/</guid><description>Portfolio Exercise 4: Advanced AI Applications Note: M4 - Group Assignment 4 Deadline: Monday, January 8th at Noon
Introduction This assignment encourages you to build an engaging and, if possible, fun application using the techniques learned in this module. The focus is on applying advanced AI and DL methods to solve relevant tasks, with an emphasis on creativity and practical application.
Objective Task Description Your goal is to develop an application that uses advanced AI techniques and DL for a specific, relevant task.</description></item><item><title>Intro to Graph Neural Networks</title><link>https://aaubs.github.io/ds24/en/m3/04_intro-gnn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3/04_intro-gnn/</guid><description>Graph neural networks (GNNs) are a powerful new class of machine learning algorithms that are specifically designed to handle graph-structured data. Unlike traditional neural networks, which are designed to process data in the form of vectors or matrices, GNNs can operate directly on graphs, where nodes represent entities and edges represent relationships between entities. This makes them well-suited for a wide range of tasks that involve understanding the structure of complex systems, such as social networks, knowledge graphs, and molecular structures.</description></item><item><title>Mathematics (Brushup)</title><link>https://aaubs.github.io/ds24/en/m1/01_intro_ds/07-math/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m1/01_intro_ds/07-math/</guid><description>How does Math help us? Machines can only understand numbers. For instance, to perform ML algorithms on text and multimedia, they need to be stored in vectors, matrices, and tensors. An example would be the representation of text as a vector of 768 dimensions. Using linear algebra, you can manipulate vectors, matrices, and tensors.
We will focus on understanding the mathematics behind ML algorithms in two dimensions. This tutorial will provide you with an overview of how machine learning algorithms work when applied to higher-dimensional data.</description></item><item><title>Group Assignment 4</title><link>https://aaubs.github.io/ds24/en/m3/04_group_assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m3/04_group_assignment/</guid><description>Portfolio Exercise 4: Advanced AI Applications Note: M4 - Final Assignment Deadline: Friday, 8 March 2024, 12:00 PM
Introduction This assignment is designed to explore the frontier of AI applications, focusing on the integration of Retrieval-Augmented Generation (RAG) with vector databases such as ChromDB and LanceDB, and the comparison of various prompt engineering techniques. The goal is to build an application that not only showcases advanced AI and DL capabilities but also evaluates the impact of different prompt strategies on model performance.</description></item><item><title/><link>https://aaubs.github.io/ds24/en/m6/l1/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaubs.github.io/ds24/en/m6/l1/readme/</guid><description>MLOps Lecture 1 - Intro to APIs &amp;amp; DataBases This repository contains lecutre slides, python scripts and dataset for the first lecture.
API api_jokes.py is an example of simple public API api_finance.py, api_news.py are examples of private API using API_key (You need to register to get your private key) api_datasets.py is an example of API Wrapper EXTRA: joke_app.py is a simple streamlit app that uses IPA to print jokes EXTRA: api_weather.</description></item></channel></rss>